/* 
    Styles des notifications
    ---
    Gestion RH
    © 2024 E2JS SA
 */
/* Importation de quelques dependances */
@import url('animations.css');
@import url('app.css');
/* Styles des notifications */
#notifications{
   position: fixed;
   display: flex;
   flex-direction: column;
   align-items: flex-end;
   padding: 10px;
   bottom: 30px;
   right: 30px;
   z-index: 100;
}
/* Attente */
#notifications .wait{
   position: relative;
   display: flex;
   align-items: center;
   background-color: #ffffffed;
   padding: 10px;
   border-radius: 10px;
   transform: scaleY(.5);
   opacity: 0;
   width: 186px;
   transition: transform .3s cubic-bezier(0.68, -0.55, 0.27, 1.55), opacity .2s ease-in-out
}

#notifications .wait[show],
#notifications .wait[show-timeout] {
   transform: scaleY(1);
   opacity: 1;
}


#notifications .wait .box{
   position: relative;
   width: 30px;
   height: 30px;
   display: flex;
   align-items: center;
   justify-content: center;
}
#notifications .wait svg {
   transform: rotate(-90deg);
   position: absolute;
   width: inherit;
   height: inherit;
   top: 0;
   left: 0;
}
#notifications .wait circle[static]{
   stroke: var(--color-blue-light-3) !important;
}
#notifications .wait circle[dynamic]{
   stroke-dasharray: 1256.12939453125;
   stroke-dashoffset: 1256.12939453125;
}

#notifications .wait::after {
   content: attr(text);
   margin-left: 10px;
   font-size: 14px;
   color: var(--color-blue-black);
}
#notifications .wait[show-timeout] .box::after{
   content: '\f00d';
   font-family: 'Font Awesome 6 Pro';
   position: absolute;
   color: var(--color-blue-black);
   width: 18px;
   height: 18px;
   line-height: 18px;
   font-size: 14px;
   border-radius: 50%;
   text-align: center;
   transition: color .3s ease-in-out;
   cursor: pointer;
   animation: hide-cancel .3s 5s ease-in-out forwards;
}
#notifications .wait[no-cancel] .box::after{
   display: none;
}
#notifications .wait[show-timeout] .box:hover::after{
   color: var(--color-blue-black);
}

/* Attente animé */
/* Normal */
#notifications .wait[show] circle[dynamic] {
   animation: lilo 2s ease-in-out infinite alternate;
}
#notifications .wait[show] .box {
   animation: turn .5s linear infinite;
}
#notifications .wait[show]::after {
   animation: color-bounce .5s ease-in-out infinite alternate;
}
/* Attente timeout */
#notifications .wait[show-timeout] circle[dynamic] {
   animation: lilo 5s ease-in-out, lilo 2s 5s ease-in-out infinite alternate;
}
#notifications .wait[show-timeout] .box {
   animation: turn .5s 5s linear infinite;
}
#notifications .wait[show-timeout]::after {
   animation: color-bounce .5s 5s ease-in-out infinite alternate;
}
/* Temporaire */
.notifications-list .notification{
   display: flex;
   flex-direction: row;
   position: relative;
   border-radius: 10px;
   line-height: 26px;
   box-shadow: 0 0 2px var(--color-blue-black);
   background-color: #020617;
   user-select: none;
   padding-left: 50px;
   min-width: 300px;
   max-width: 300px;
   /* max-height: 0; */
   height: 47px;
   opacity: 0;
   overflow: hidden;
   transform: scaleY(0);
   transition: transform .3s cubic-bezier(0.68, -0.55, 0.27, 1.55), opacity .2s ease-in-out,
       max-height .3s ease-in-out, margin .3s ease-in-out;
}
.notifications-list .notification[show]{
   transform: scaleY(1);
   max-height: 55px;
   margin-top: 5px;
   opacity: 1;
}
.notification::before{
   position: absolute;
   top: 11px;
   left: 10px;
   font-family: 'Font Awesome 6 Pro';
   font-size: 15px;
   border-radius: 50%;
   height: 25px;
   width: 25px;
   line-height: 25px;
   text-align: center;
}
.notification::after{
   content: '';
   position: absolute;
   top: 10px;
   right: 10px;
   width: 5px;
   height: 5px;
   border-radius:50px;
}
.notification .head {
   margin-top: 10px;
   font-size: 14px;
}

.notification:hover{
   max-height: 1000px !important;
}

/* Couleur */
/* State = Good */
.notification[state='good']::before {
   content: '\f336';
   color: var(--color-green-black);
   background-color: var( --color-green-light);
}

.notification[state='good']::after {
   background-color: var(--color-green-black);
}
.notification[state='good'] .head{
   color: var(--color-white);
}

/* State = Bad */
.notification[state='bad']::before {
   content: '\e242';
   color: var(--color-red-black);
   background-color: rgba(145, 13, 13, 0.5);
}
.notification[state='bad']::after {
   background-color: var(--color-red-black);
}
.notification[state='bad'] .head{
   color: var(--color-white);
}

